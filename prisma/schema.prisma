generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  // directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  // shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrationsV
}

model User {
  id        String @id @default(cuid())
  firstName String @map(name: "first_name")
  lastName  String @map(name: "last_name")
  email     String @unique
  password  String
  role      ROLE   @default(SR_OFFICER)

  interviewed ChildRecord[] @relation("Interview")
  validated   ChildRecord[] @relation("Validate")

  @@map(name: "users")
}

enum ROLE {
  ADMIN
  CC_COORDINATOR
  SR_OFFICER
}

model ChildRecord {
  id           String   @id @default(cuid()) @map("provisional_id")
  dateOfVisit  DateTime @map("date_of_visit")
  photoNumbers String   @map("photo_numbers")
  sector       String
  specialCase  Boolean  @default(false) @map("special_request_child")

  child         Child?
  interviewerId String @map("interviewed_by")
  validatorId   String @map("validated_by")
  interviewer   User   @relation("Interview", fields: [interviewerId], references: [id])
  validator     User   @relation("Validate", fields: [validatorId], references: [id])

  @@map(name: "child_records")
}

model Child {
  id        String   @id @default(cuid())
  firstName String   @map(name: "first_name")
  lastName  String   @map(name: "last_name")
  birthDate DateTime @map("date_of_birth")
  gender    GENDER

  childInformation ChildInformation?
  school           School?
  childRecordId    String?           @unique @map("child_record_id")
  familyId         String            @map("family_id")
  childRecord      ChildRecord?      @relation(fields: [childRecordId], references: [id])
  family           Family            @relation(fields: [familyId], references: [id])

  @@map(name: "children")
}

enum GENDER {
  MALE
  FEMALE
  OTHERS
}

model ChildInformation {
  id              String  @id @default(cuid())
  adConsent       Boolean @default(false) @map(name: "ad_consent")
  chores          String
  eyeColor        String  @map(name: "eye_color")
  hairColor       String  @map(name: "hair_color")
  healthIssues    String  @default("NONE") @map(name: "health_issues")
  height          Float   @map(name: "height_cm")
  hobbies         String
  pastimes        String
  sleepsOn        String  @map(name: "sleeps_on")
  spokenLanguages String  @map(name: "spoken_languages")
  weight          Float   @map(name: "weight_kg")

  childId String @unique @map(name: "child_id")
  child   Child  @relation(fields: [childId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@map(name: "children_information")
}

model School {
  id                            String  @id @default(cuid())
  attendsSchool                 Boolean @default(false) @map("attends_school")
  whyNot                        String? @map("why_not")
  schoolName                    String? @map("school_name")
  schoolType                    String? @map("school_type")
  academicYear                  String? @map("academic_year")
  schoolTranspo                 String? @map("school_transportation")
  timeToSchool                  String? @map("time_to_school")
  mostRecentGradeLevelCompleted String? @map("most_recent_grade_level_completed")
  currentGradeLevel             String? @map("current_grade_level")
  favoriteSubjects              String? @map("favorite_subjects")

  childId String @unique @map("child_id")
  child   Child  @relation(fields: [childId], references: [id])

  @@map("school_records")
}

model Family {
  id        String      @id @default(cuid()) @map("family_id")
  children  Child[]
  guardians Guardian[]
  household Household[]

  @@map(name: "family_records")
}

model Guardian {
  id         String   @id @default(cuid())
  firstName  String   @map(name: "first_name")
  lastName   String   @map(name: "last_name")
  occupation String
  relation   RELATION

  familyId String @map("family_id")
  family   Family @relation(fields: [familyId], references: [id])

  @@map(name: "guardians")
}

model Household {
  id               String  @id @default(cuid())
  address          String
  roomTypeNumber   String  @map("room_type_number")
  walls            String
  roof             String
  floor            String
  numberOfBeds     Int     @map("number_of_beds")
  numberOfPeople   Int     @map("number_of_people")
  electricity      Boolean @default(false)
  waterSource      Boolean @default(false) @map("water_source")
  cookingFacility  Boolean @default(false) @map("cooking_facility")
  sanitaryFacility Boolean @default(false) @map("sanitary_facility")
  overallCondition String  @map("overall_condition")
  ownership        String  @map("ownership_status")
  comments         String

  familyId String
  family   Family @relation(fields: [familyId], references: [id])

  @@map("household_records")
}

enum RELATION {
  FATHER
  MOTHER
  GUARDIAN
}
